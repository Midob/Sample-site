/*! normalize.scss v0.1.0 | MIT License | based on git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

html {
  font-size: 62.5%; }

body {
  font-family: 'Open Sans', sans-serif;
  font-size: 1.2rem;
  line-height: 1.5;
  color: #6b7074;
  background-color: #ffffff; }
  body * {
    box-sizing: border-box; }

a {
  color: #ff4b4c; }

.btn {
  box-shadow: none;
  border: 0;
  padding: 20px 40px;
  font-weight: bold;
  text-transform: uppercase;
  text-align: center;
  background-color: #ff4b4c;
  transition: 0.3s color, 0.3s background-color; }
  .btn:hover {
    color: #ff4b4c;
    background-color: #feffff; }

@media (min-width: 801px) {
  a[href^="tel"], button[href^="tel"] {
    pointer-events: none; } }

form label {
  display: block;
  margin: 0 0 5px 0;
  font-weight: bold;
  text-transform: uppercase; }

form input, form textarea {
  border: 2px solid #fbffff;
  padding: 0 15px;
  background: transparent;
  font-size: 1.4rem;
  line-height: 5.6rem;
  outline: none;
  resize: none;
  transition: 0.3s border-color; }
  form input:hover, form textarea:hover {
    border-color: #c8ffff; }
  form input:focus, form textarea:focus {
    border-color: #ff4b4c; }
  form input:valid, form textarea:valid {
    border-color: #dff0d8; }

form .form_item {
  margin: 0 0 40px 0; }

.wrapper {
  padding: 40px 0; }

.container {
  margin: 0 auto;
  padding: 0 20px;
  width: 100%;
  max-width: 1210px; }

.nag {
  margin: 10px 0;
  font-size: 2.6rem;
  line-height: 1.5;
  letter-spacing: 0.1rem;
  font-weight: 300;
  text-transform: uppercase; }
  .nag:after {
    content: '';
    display: block;
    width: 45px;
    height: 2px;
    background-color: #516065; }
  .nag--dark {
    color: #6b7074; }
  .nag--light {
    color: #feffff; }
    .nag--light:after {
      background-color: #ffffff; }

.header {
  background-color: #ffffff;
  text-align: center; }
  .header .title {
    float: left;
    text-decoration: none;
    transition: 0.3s opacity; }
    .header .title:hover {
      opacity: 0.8; }

.filters {
  float: right;
  margin: 20px -15px 50px 0;
  padding: 0;
  list-style: none; }
  .filters .filter_li {
    display: inline-block;
    margin: 0 0 0 5px; }
    .filters .filter_li__btn {
      box-shadow: none;
      border: 2px solid transparent;
      margin: 0;
      padding: 7px 15px;
      display: inline-block;
      line-height: 1;
      font-weight: bold;
      color: #6b7074;
      text-transform: uppercase;
      text-decoration: none;
      transition: 0.5s all; }
      .filters .filter_li__btn:hover {
        border-color: #ff4b4c; }
    .filters .filter_li.selected .filter_li__btn {
      border-color: #ff4b4c;
      color: #ff4b4c; }
  @media (max-width: 800px) {
    .filters {
      margin: 20px 0;
      width: 100%; } }
  @media (max-width: 480px) {
    .filters {
      margin: 20px 0 0; }
      .filters .filter_li {
        margin: 5px 0; } }

.boxes {
  display: -ms-inline-flexbox;
  display: inline-flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  width: calc(100% + 3px);
  margin: 31px 0;
  transition: 0.5s all; }
  .boxes .box {
    position: relative;
    display: block;
    border: 1px solid #9c9c9c;
    margin: -1px 0 0 -1px;
    width: 25%;
    background-color: #ffffff;
    -ms-transform: scale(0);
        transform: scale(0);
    transition: 0.4s transform; }
    .boxes .box:before {
      z-index: -1;
      content: '';
      position: absolute;
      top: -1px;
      left: -1px;
      border: 1px solid transparent;
      width: 100%;
      height: 100%;
      transition: 0.5s all; }
    .boxes .box__link {
      position: relative;
      display: block;
      padding: 11px; }
      .boxes .box__link:before {
        z-index: 2;
        content: "+";
        border-radius: 180px;
        position: absolute;
        display: -ms-flexbox;
        display: flex;
        width: calc(100% - 22px);
        height: calc(100% - 22px);
        -ms-flex-align: center;
            align-items: center;
        -ms-flex-pack: center;
            justify-content: center;
        font-family: serif;
        font-size: 4rem;
        color: #feffff;
        cursor: pointer;
        background-color: rgba(255, 75, 76, 0.9);
        -ms-transform: scale(0);
            transform: scale(0);
        transition: 0.5s all; }
    .boxes .box__img {
      display: block;
      max-width: 100%; }
    .boxes .box:hover:before, .boxes .box:focus:before {
      z-index: 1;
      border-color: #ff4b4c; }
    .boxes .box:hover:not(.active) .box__link:before, .boxes .box:focus:not(.active) .box__link:before {
      border-radius: 0;
      -ms-transform: scale(1);
          transform: scale(1); }
    .boxes .box.visible.active {
      z-index: 2;
      -ms-transform: scale(1.1);
          transform: scale(1.1); }
      .boxes .box.visible.active:before {
        z-index: 1;
        border-color: #ff4b4c; }
    .boxes .box.visible {
      -ms-transform: scale(1);
          transform: scale(1); }
    .boxes .box.non-visible {
      display: none; }
  @media (max-width: 800px) {
    .boxes {
      width: calc(100% + 1px);
      max-width: 588px; }
      .boxes .box {
        width: 50%; } }

.footer {
  color: #feffff;
  background: url("../images/bg.jpg") no-repeat center bottom #ffffff;
  background-attachment: fixed; }
  .footer a {
    color: #feffff;
    text-decoration: none;
    transition: 0.3s color; }
    .footer a:hover {
      color: #ff4b4c; }
  .footer .contact_form {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    margin: 30px 0; }
    .footer .contact_form .form_group__col {
      -ms-flex-order: 1;
          order: 1;
      width: 50%;
      padding-right: 15px; }
      .footer .contact_form .form_group__col input {
        width: 100%;
        max-width: 470px; }
    .footer .contact_form .contact_info {
      -ms-flex-order: 2;
          order: 2;
      margin: 0 0 40px 0;
      padding: 0 0 0 15px;
      width: 50%;
      line-height: 2; }
      .footer .contact_form .contact_info__text {
        margin: 10px 0 0 0; }
      .footer .contact_form .contact_info__data {
        margin: 30px 0 0 0; }
    .footer .contact_form .form_item__textarea {
      -ms-flex-order: 3;
          order: 3;
      width: 100%; }
      .footer .contact_form .form_item__textarea textarea {
        width: 100%;
        height: 220px; }
    .footer .contact_form .btn[type="submit"] {
      -ms-flex-order: 4;
          order: 4;
      width: 100%;
      max-width: 360px; }
  @media (max-width: 800px) {
    .footer {
      background-image: url("../images/bg_tablet.jpg");
      background-attachment: inherit;
      background-size: cover; }
      .footer .contact_form .form_group__col {
        -ms-flex-order: 2;
            order: 2;
        padding: 0;
        width: 100%; }
      .footer .contact_form .contact_info {
        -ms-flex-order: 1;
            order: 1;
        padding: 0;
        width: 100%; } }
  @media (max-width: 480px) {
    .footer {
      background-image: url("../images/bg_mobile.jpg"); }
      .footer .contact_form .btn {
        margin: 0 auto; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
